# 应用服务
server.port=8080
server.servlet.context-path=/community

# Thymeleaf
# 关闭模板缓存（默认值： true ）
spring.thymeleaf.cache=false

#mysql连接池
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?serverTimezone=Asia/Shanghai&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=Gepoint
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

#MyBatis
#命名自适配:该配置就是将带有下划线的表字段映射为驼峰格式的实体类属性
mybatis.configuration.map-underscore-to-camel-case=true 

# MybatisProperties
#当xml文件名和接口名不一样的时候，下面这句这一个配置必须加，一样的话 可以不加
#mybatis.mapper-locations=classpath:com/xiefuzhong/community/dao/*.xml
mybatis.type-aliases-package=com.xiefuzhong.community.entity
mybatis.configuration.useGeneratedKeys=true
mybatis.configuration.mapUnderscoreToCamelCase=true

#logger日志级别
#logging.level.com.xiefuzhong.community=debug
#将日志记录到文件中:所有信息存到一个文件中，太复杂了，:直接使用logback-spring.xml  进行日志的详细配置
#logging.file.name=E:/ideaFile/community/community.log

#MailProperties
#内置邮箱账号的配置
spring.mail.host=smtp.163.com
spring.mail.port=465
spring.mail.username=xiefuzhong25@163.com
spring.mail.password=CIVTUISOMXOSDJCI
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

# community
community.path.domain=http://localhost:8080
#上传文件头像
community.path.upload=d:/work/data/upload

#redis配置:RedisAutoConfiguration类是spring默认配置了redisTemplate模板<object,object>,但是我们需要自定义自己的<string,object>
spring.redis.database=1
spring.redis.host=localhost
spring.redis.port=6379

# KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
    #偏移量是否自动提交
spring.kafka.consumer.enable-auto-commit=true  
    #自动提交的频率 ms
spring.kafka.consumer.auto-commit-interval=3000

# ElasticsearchProperties：注意NerryRuntime.java-->setAvailableProcessors方法中会和redis已初始化了产生冲突,
#spring.data.elasticsearch.cluster-name=nowcoder
# 9200是http访问端口，9300是tcp端口
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
spring.elasticsearch.uris=127.0.0.1:9200
spring.elasticsearch.username=community

# TaskExecutionProperties
    # 核心线程数量
spring.task.execution.pool.core-size=5
    # 最大线程数量
spring.task.execution.pool.max-size=15
    # 队列的容量：缓冲的任务
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties（定时启动的任务）
spring.task.scheduling.pool.size=5

# QuartzProperties（自己配置，才能将job存到数据库中：默认不配置的时候是读取内存的，不会存到数据库中）
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
    #id自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
    #job存到数据库中的时候是哪个类来做这个事：这里存在版本不同类不同问题
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
    #job存的时候驱动是什么
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
    #是否采用集群的方式
spring.quartz.properties.org.quartz.jobStore.isClustered=true
    #使用哪个线程池
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
    #线程数量
spring.quartz.properties.org.quartz.threadPool.threadCount=5
